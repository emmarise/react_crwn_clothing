{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDvm1CrTIrBZyjsKIcQXaUJmpEgjgy5kKw\",\n  authDomain: \"crwndb-a7975.firebaseapp.com\",\n  databaseURL: \"https://crwndb-a7975.firebaseio.com\",\n  projectId: \"crwndb-a7975\",\n  storageBucket: \"crwndb-a7975.appspot.com\",\n  messagingSenderId: \"986399169608\",\n  appId: \"1:986399169608:web:a72b7e282ed794edf58c7d\",\n  measurementId: \"G-Q4WYDX5DJ6\"\n};\nexport const createUserProfileProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`uesr/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/emma/Documents/GitHub/react_crwn_clothing/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,8BAFD;AAGXC,EAAAA,WAAW,EAAE,qCAHF;AAIXC,EAAAA,SAAS,EAAE,cAJA;AAKXC,EAAAA,aAAa,EAAE,0BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,gCAAgC,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAChF,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,QAAOJ,QAAQ,CAACK,GAAI,EAAnC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACjB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,QAA7B;AACA,UAAMW,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,QAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOa,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AAED,SAAOf,OAAP;AACH,CAxBM;AA0BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAI,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAlB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config = {\n    apiKey: \"AIzaSyDvm1CrTIrBZyjsKIcQXaUJmpEgjgy5kKw\",\n    authDomain: \"crwndb-a7975.firebaseapp.com\",\n    databaseURL: \"https://crwndb-a7975.firebaseio.com\",\n    projectId: \"crwndb-a7975\",\n    storageBucket: \"crwndb-a7975.appspot.com\",\n    messagingSenderId: \"986399169608\",\n    appId: \"1:986399169608:web:a72b7e282ed794edf58c7d\",\n    measurementId: \"G-Q4WYDX5DJ6\"\n}\n\nexport const createUserProfileProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`uesr/${userAuth.uid}`)\n\n    const snapShot = await userRef.get()\n\n    if(!snapShot.exists) {\n        const {displayName, email} = userAuth;\n        const createAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createAt,\n                ...additionalData\n            })\n        } catch (error) {\n            console.log('error creating user', error.message)\n        }\n    }\n\n    return userRef\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider  = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}