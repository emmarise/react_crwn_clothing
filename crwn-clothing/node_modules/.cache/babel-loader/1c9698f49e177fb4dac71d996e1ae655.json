{"ast":null,"code":"import React from 'react';\nimport { Route } from 'react-router-dom'; // import { connect } from 'react-redux';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils.js';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage); // class ShopPage extends React.Component {\n//   state = {\n//     loading: true\n//   };\n//   unsubscribeFromSnapshot = null;\n//   componentDidMount() {\n//     const { updateCollections } = this.props;\n//     const collectionRef = firestore.collection('collections');\n//     collectionRef.get().then(snapshot => {\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       updateCollections(collectionsMap);\n//       this.setState({ loading: false });\n//     });\n//   }\n//   render() {\n//     const { match } = this.props;\n//     const { loading } = this.state;\n//     return (\n//       <div className='shop-page'>\n//         <Route\n//           exact\n//           path={`${match.path}`}\n//           render={props => (\n//             <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n//           )}\n//         />\n//         <Route\n//           path={`${match.path}/:collectionId`}\n//           render={props => (\n//             <CollectionPageWithSpinner isLoading={loading} {...props} />\n//           )}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// const mapDispatchToProps = dispatch => ({\n//   updateCollections: collectionsMap =>\n//     dispatch(updateCollections(collectionsMap))\n// });\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(ShopPage);\n\nexport default ShopPage;","map":{"version":3,"sources":["/Users/emma/Documents/GitHub/react_crwn_clothing/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,kCAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,eAAeG,QAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\n// import { connect } from 'react-redux';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils.js';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n// class ShopPage extends React.Component {\n//   state = {\n//     loading: true\n//   };\n\n//   unsubscribeFromSnapshot = null;\n\n//   componentDidMount() {\n//     const { updateCollections } = this.props;\n//     const collectionRef = firestore.collection('collections');\n\n//     collectionRef.get().then(snapshot => {\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       updateCollections(collectionsMap);\n//       this.setState({ loading: false });\n//     });\n//   }\n\n//   render() {\n//     const { match } = this.props;\n//     const { loading } = this.state;\n//     return (\n//       <div className='shop-page'>\n//         <Route\n//           exact\n//           path={`${match.path}`}\n//           render={props => (\n//             <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n//           )}\n//         />\n//         <Route\n//           path={`${match.path}/:collectionId`}\n//           render={props => (\n//             <CollectionPageWithSpinner isLoading={loading} {...props} />\n//           )}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => ({\n//   updateCollections: collectionsMap =>\n//     dispatch(updateCollections(collectionsMap))\n// });\n\n// export default connect(\n//   null,\n//   mapDispatchToProps\n// )(ShopPage);\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}